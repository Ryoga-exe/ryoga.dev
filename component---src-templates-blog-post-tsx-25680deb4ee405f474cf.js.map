{"version":3,"file":"component---src-templates-blog-post-tsx-25680deb4ee405f474cf.js","mappings":"yLA8DA,UApDwC,SAAC,GAAoC,IAAlCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACtDC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAD,CAAQV,SAAUA,EAAUM,MAAOH,IACjCM,EAAAA,EAAAA,IAACE,EAAAA,EAAD,CAAKL,MAAOL,EAAKW,OAAON,MAAOO,YAAaZ,EAAKW,OAAOC,aAAeZ,EAAKa,WAC5EL,EAAAA,EAAAA,IAAAA,UAAAA,CAASM,UAAU,iBACjBN,EAAAA,EAAAA,IAAAA,MAAAA,CAAKM,UAAU,eACbN,EAAAA,EAAAA,IAAAA,KAAAA,CAAIO,SAAS,YAAYf,EAAKW,OAAON,QACrCG,EAAAA,EAAAA,IAAAA,IAAAA,CAAGM,UAAU,cACXN,EAAAA,EAAAA,IAACQ,EAAAA,EAAD,CAAiBC,KAAMC,EAAAA,MACtBlB,EAAKW,OAAOQ,QAGjBX,EAAAA,EAAAA,IAAAA,UAAAA,CAASY,wBAAyB,CAAEC,OAAQrB,EAAKsB,MAAQP,SAAS,kBAIpEP,EAAAA,EAAAA,IAAAA,MAAAA,MACEA,EAAAA,EAAAA,IAAAA,KAAAA,CACEe,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,KAGXpB,EAAAA,EAAAA,IAAAA,KAAAA,KACGF,IACCE,EAAAA,EAAAA,IAACqB,EAAAA,KAAD,CAAMC,GAAIxB,EAASK,OAAOoB,KAAMC,IAAI,QAApC,KACK1B,EAASK,OAAON,SAKzBG,EAAAA,EAAAA,IAAAA,KAAAA,KACGD,IACCC,EAAAA,EAAAA,IAACqB,EAAAA,KAAD,CAAMC,GAAIvB,EAAKI,OAAOoB,KAAMC,IAAI,QAC7BzB,EAAKI,OAAON,MADf,UAORG,EAAAA,EAAAA,IAACyB,EAAAA,EAAD,MA/CN,C","sources":["webpack://ryoga.dev/./src/templates/blog-post.tsx"],"sourcesContent":["import { Link, graphql } from 'gatsby';\nimport React from 'react';\n\nimport Layout from '@components/layout';\nimport Bio from '@components/molecules/bio';\nimport { faCalendarAlt } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '@styles/blog-post.scss';\nimport SEO from '@utils/seo';\n\nconst BlogPostTemplate: React.FC<any> = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={post.fields.title} description={post.fields.description || post.excerpt} />\n      <article className='blog-article'>\n        <div className='blog-title'>\n          <h1 itemProp='headline'>{post.fields.title}</h1>\n          <p className='post-date'>\n            <FontAwesomeIcon icon={faCalendarAlt} />\n            {post.fields.date}\n          </p>\n        </div>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} itemProp='articleBody' />\n        {/*<section>{renderAst(post.htmlAst)}</section>*/}\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel='prev'>\n                ← {previous.fields.title}\n              </Link>\n            )}\n          </li>\n\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel='next'>\n                {next.fields.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <Bio />\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        title\n        date(formatString: \"YYYY/MM/DD\")\n        description\n      }\n    }\n  }\n`;\n"],"names":["data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","___EmotionJSX","Layout","SEO","fields","description","excerpt","className","itemProp","FontAwesomeIcon","icon","faCalendarAlt","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","slug","rel","Bio"],"sourceRoot":""}