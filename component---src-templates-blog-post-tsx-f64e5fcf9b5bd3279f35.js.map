{"version":3,"sources":["webpack://ryoga.dev/./src/templates/blog-post.tsx"],"names":["data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","className","itemProp","icon","faCalendar","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"mappings":"kMAuEA,UA7DwC,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACtDC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,QAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,IACjC,QAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,WAEpD,mBAASC,UAAU,iBACjB,eAAKA,UAAU,eACb,cAAIC,SAAS,YACVZ,EAAKQ,YAAYH,QAEpB,aAAGM,UAAU,cACX,QAAC,IAAD,CAAiBE,KAAMC,QAAcd,EAAKQ,YAAYO,QAG1D,mBACEC,wBAAyB,CAAEC,OAAQjB,EAAKkB,MACxCN,SAAS,kBAOb,oBACE,cACEO,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,KAGX,kBACGlB,IACC,QAAC,EAAAmB,KAAD,CAAMC,GAAIpB,EAASqB,OAAOC,KAAMC,IAAI,QAApC,KACKvB,EAASE,YAAYH,SAK9B,kBACGE,IACC,QAAC,EAAAkB,KAAD,CAAMC,GAAInB,EAAKoB,OAAOC,KAAMC,IAAI,QAC7BtB,EAAKC,YAAYH,MADpB,UAOR,QAAC,IAAD","file":"component---src-templates-blog-post-tsx-f64e5fcf9b5bd3279f35.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"@components/molecules/bio\"\nimport Layout from \"@components/layout\"\nimport SEO from \"@utils/seo\"\nimport \"@styles/blog-post.scss\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalendar} from '@fortawesome/free-solid-svg-icons'\n\nconst BlogPostTemplate: React.FC<any> = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article className=\"blog-article\">\n        <div className=\"blog-title\">\n          <h1 itemProp=\"headline\">\n            {post.frontmatter.title}\n          </h1>\n          <p className=\"post-date\">\n            <FontAwesomeIcon icon={faCalendar}/>{post.frontmatter.date}\n          </p>\n        </div>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        {/*<section>{renderAst(post.htmlAst)}</section>*/}\n      </article>\n\n\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          \n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <Bio />\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY/MM/DD\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}