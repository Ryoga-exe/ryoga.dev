{"version":3,"sources":["webpack://ryoga.dev/./src/components/atoms/button.tsx","webpack://ryoga.dev/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://ryoga.dev/./src/components/molecules/arrow.tsx","webpack://ryoga.dev/./src/components/organisms/hero.tsx","webpack://ryoga.dev/./src/pages/index.tsx"],"names":["Base","Link","Color","txt","to","icon","faArrowRight","strings","raw","Animation","keyframes","slice","fill","isHero","href","className","location","title","AboutMe","Skills","Works","Blog","Achievements","style","height","id","padding","Heading"],"mappings":"qLAQMA,GAAO,OAAOC,OAAP,qBAAH,qIAQCC,eARD,qBAUYA,aAVZ,gCAaGA,eAbH,iHAoBGA,eApBH,2IA4BcA,mBA5Bd,kIAwDV,IAPkD,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,GAAR,OAChD,QAACJ,EAAD,CAAMI,GAAIA,IACR,oBAAOD,IACP,QAAC,IAAD,CAAiBE,KAAMC,W,+JC5DyBC,EAASC,E,UCKvDC,GAAYC,QAAH,IDLqCH,ECKrC,2MDJRC,IACHA,EAAMD,EAAQI,MAAM,IAGtBJ,EAAQC,IAAMA,ECAD,EDCND,ICqCT,GAxBW,8MAhBO,GAgBP,aAhBO,GAgBP,mBAgBQ,EAhBR,mHAoBME,EApBN,oB,UCbLT,GAAI,+LAQYE,aARZ,KAoBV,EATuB,WACrB,OACE,QAACF,EAAD,MACE,QAAC,IAAD,CAAMY,KAAK,QAAQC,QAAQ,KAC3B,QAAC,EAAD,CAAOC,KAAK,WAAWC,UAAU,a,oBCTvC,IAsBA,EAtBqC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtC,OACE,QAAC,WAAD,MACE,QAAC,IAAD,CAAQA,SAAUA,IAChB,QAAC,IAAD,CAAKC,MAAM,SACX,QAAC,EAAD,OACA,QAACC,EAAD,OACA,QAACC,EAAD,OACA,QAACC,EAAD,OACA,QAACC,EAAD,OACA,QAACC,EAAD,OACA,QAAC,IAAD,MAEE,QAAC,EAAArB,KAAD,CAAMG,GAAG,UAAQ,4BACjB,eAAKmB,MAAO,CAACC,OAAO,YACpB,QAAC,IAAD,UASJN,EAAoB,kBACxB,QAAC,IAAD,CAAWO,GAAG,UAAUC,QAAQ,cAC9B,QAACC,EAAD,kBACA,wBACE,4CACA,kEACA,kFACA,mCACA,QAAC,IAAD,CAAcxB,IAAI,QAAQC,GAAG,UAA7B,YAKAe,EAAmB,kBACvB,QAAC,IAAD,CAAWM,GAAG,SAASC,QAAQ,cAC7B,QAACC,EAAD,iBAIEP,EAAkB,kBACtB,QAAC,IAAD,CAAWK,GAAG,QAAQC,QAAQ,cAC5B,QAACC,EAAD,gBAIEN,EAAiB,kBACrB,QAAC,IAAD,CAAWI,GAAG,OAAOC,QAAQ,cAC3B,QAACC,EAAD,eAIEL,EAAyB,kBAC7B,QAAC,IAAD,CAAWG,GAAG,eAAeC,QAAQ,cACnC,QAACC,EAAD,uBAMEA,GAAO","file":"component---src-pages-index-tsx-8319f50b8efa254ff44d.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport styled from \"@emotion/styled\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\nimport Color from '@utils/color'\n\nconst Base = styled(Link)`\n  text-decoration: none;\n  display: inline-block;\n  padding: 8px 50px;\n  line-height: 1;\n  margin-top: 30px;\n  font-size: 1.00em;\n  border-radius: 2px;\n  color: ${Color.buttonText};\n  \n  background-color: ${Color.buttonBg};\n  transition: 0.3s;\n  > span {\n    color: ${Color.buttonText};\n    display: inline-block;\n    -webkit-transform: translateX(8px);\n    transform: translateX(8px);\n    transition: 0.3s;\n  }\n  > svg {\n    color: ${Color.buttonText};\n    display: inline-block;\n    -webkit-transform: translateX(-8px);\n    transform: translateX(-8px);\n    opacity: 0;\n    transition: 0.3s;\n  }\n  &:hover {\n    background-color: ${Color.buttonBgHoverd};\n    transition: 0.3s;\n    > span {\n      \n      transform: translateX(-5px);\n      transition: 0.3s;\n    }\n    > svg {\n      \n      transform: translateX(5px);\n      opacity: 1;\n      transition: 0.3s;\n    }\n  }\n`\n\ntype ButtonDetailProps = {\n  txt : string;\n  to  : string;\n}\n\nconst ButtonDetail: React.FC<ButtonDetailProps> = ({ txt, to }) => (\n  <Base to={to}>\n    <span>{txt}</span>\n    <FontAwesomeIcon icon={faArrowRight}/>\n  </Base>\n)\n\nexport default ButtonDetail;","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import { keyframes } from '@emotion/react'\nimport styled from '@emotion/styled'\n\nconst ArrowSize = 18;\n\nconst Animation = keyframes`\n  0% {\n    transform: rotate(-45deg) translate(0, 0);\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    transform: rotate(-45deg) translate(-25px, 25px);\n    opacity: 0;\n  }\n`\n\nconst Arrow = styled.a`\n  width: 30px;\n  height: 60px;\n  display: block;\n  position: absolute;\n  bottom: 0;\n  text-align: center;\n  cursor: pointer;\n  color: white;\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0px;\n    left: 50%;\n    width: ${ArrowSize}px;\n    height: ${ArrowSize}px;\n    margin-left: ${-ArrowSize / 2}px;\n    border-bottom: 2px solid white;\n    border-left: 2px solid white;\n    transform: rotate(-45deg) translate(0, 0);\n    animation: ${Animation} 1.5s infinite;\n  }\n`\n\nexport default Arrow","import React from \"react\"\r\nimport styled from \"@emotion/styled\"\r\nimport Logo from \"@components/atoms/logo\"\r\nimport Arrow from \"@components/molecules/arrow\"\r\nimport Color from '@utils/color'\r\n\r\nconst Base = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: min(max(25vw, 65vh), 100vh);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 0px;\r\n  background-color: ${Color.bgAccent};\r\n`\r\n\r\nconst Hero: React.FC = () => {\r\n  return(\r\n    <Base>\r\n      <Logo fill=\"white\" isHero={true}/>\r\n      <Arrow href='#aboutMe' className=\"scroll\"></Arrow>\r\n    </Base>\r\n  );\r\n}\r\n\r\nexport default Hero","import React from \"react\"\nimport { Link, graphql, PageProps } from \"gatsby\"\n\nimport Bio from \"@components/molecules/bio\"\nimport Layout from \"@components/layout\"\nimport SEO from \"@utils/seo\"\nimport Hero from \"@components/organisms/hero\"\nimport Container from \"@components/atoms/container\"\nimport ButtonDetail from \"@components/atoms/button\"\n\nimport styled from \"@emotion/styled\"\n\nconst TopPage: React.FC<PageProps> = ({ location }) => {\n  return (\n    <React.Fragment>\n      <Layout location={location}>\n        <SEO title=\"Top\" />\n        <Hero />\n        <AboutMe />\n        <Skills />\n        <Works />\n        <Blog />\n        <Achievements />\n        <Container>\n\n          <Link to=\"/blog\"><h1>Blog</h1></Link>\n          <div style={{height: `100vh`}}></div>\n          <Bio />\n        </Container>\n      </Layout>\n    </React.Fragment>\n  )\n}\n\nexport default TopPage\n\nconst AboutMe: React.FC = () => (\n  <Container id=\"aboutMe\" padding=\"100px 4vw\">\n    <Heading>About Me</Heading>\n    <section>\n      <p>茨城県の某中等学校に通ってるただの人間です。</p>\n      <p>ゲーム開発、Webサイト製作、電子工作などいろいろやっています。たまに編み物もやります。</p>\n      <p>最近は、ReactやGatsby.js、競プロにハマって勉強していますが、やりたいことが多すぎて方向性が散乱しがちです。</p>\n      <p>詳しくはAboutページへ</p>\n      <ButtonDetail txt=\"About\" to=\"/about\">About</ButtonDetail>\n    </section>\n  </Container>\n)\n\nconst Skills: React.FC = () => (\n  <Container id=\"skills\" padding=\"100px 4vw\">\n    <Heading>Skills</Heading>\n  </Container>\n)\n\nconst Works: React.FC = () => (\n  <Container id=\"works\" padding=\"100px 4vw\">\n    <Heading>Works</Heading>\n  </Container>\n)\n\nconst Blog: React.FC = () => (\n  <Container id=\"blog\" padding=\"100px 4vw\">\n    <Heading>Blog</Heading>\n  </Container>\n)\n\nconst Achievements: React.FC = () => (\n  <Container id=\"achievements\" padding=\"100px 4vw\">\n    <Heading>Achievements</Heading>\n  </Container>\n)\n\n\n\nconst Heading = styled.h2`\n  font-size: 1.9em;\n  font-weight: 500;\n`\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}