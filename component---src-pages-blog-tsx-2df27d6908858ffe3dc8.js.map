{"version":3,"file":"component---src-pages-blog-tsx-2df27d6908858ffe3dc8.js","mappings":"oQAoDMA,GAAO,cAAH,mBAAG,CAAH,yFAOV,IApD2B,WACzB,IAgBA,GAhBaC,EAAAA,EAAAA,gBAAe,cAgBIC,KAAKC,aAA7BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAEhB,OACE,QAACL,EAAD,MACE,QAAC,EAAAM,EAAD,CACEC,IAAI,2EACJC,IAAKJ,EACLK,YAAY,UACZC,OAAO,QACPC,MAAO,GACPC,IAAG,EANL,uBAaA,oBACE,kBACE,aAAGC,KAAI,uBAAyBR,EAAOS,SAAYV,EAAOW,QAE5D,iBAAIX,EAAOY,a,2HClCN,iBAAH,mBAAG,CAAH,IA+CV,UAxCmC,SAAC,GAAuB,IAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpCC,EAAQF,EAAKG,kBAAkBC,MAErC,OACE,QAAC,WAAD,MACE,QAAC,IAAD,CAAQH,SAAUA,IAChB,QAAC,IAAD,CAAKI,MAAM,SACVH,EAAMI,KAAI,YAAc,gBAAXC,EAAW,EAAXA,KACNF,GAAQ,UAAAE,EAAKC,mBAAL,eAAkBH,SAAlB,UAA2BE,EAAKE,cAAhC,aAA2B,EAAaC,MACtD,OACE,mBAASC,IAAG,UAAEJ,EAAKE,cAAP,aAAE,EAAaC,KAAME,WAAS,EAACC,SAAS,8BAClD,uBACE,mBACE,QAAC,EAAAC,KAAD,CAAMC,MAAO,CAAEC,UAAW,QAAUC,GAAE,UAAEV,EAAKE,cAAP,aAAE,EAAaC,KAAMQ,SAAS,QAClE,gBAAMA,SAAS,YAAYb,MAG/B,sBACE,QAAC,IAAD,CAAiBc,KAAMC,EAAAA,MADzB,UAEGb,EAAKC,mBAFR,aAEG,EAAkBa,QAGvB,wBACE,aACEC,wBAAyB,CACvBC,QAAQ,UAAAhB,EAAKC,mBAAL,eAAkBgB,cAAejB,EAAKkB,SAEhDP,SAAS,sBAOnB,QAAC,IAAD,U","sources":["webpack://ryoga.dev/./src/components/molecules/bio.tsx","webpack://ryoga.dev/./src/pages/blog.tsx"],"sourcesContent":["import { useStaticQuery, graphql } from 'gatsby';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst Bio: React.FC<any> = () => {\n  const data = useStaticQuery(graphql`\n    query Bio {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <Base>\n      <StaticImage\n        src='https://raw.githubusercontent.com/Ryoga-exe/Ryoga-exe/main/icon/icon.jpg'\n        alt={author}\n        placeholder='blurred'\n        layout='fixed'\n        width={60}\n        css={css`\n          margin-bottom: 0;\n          margin-right: 1.2rem;\n          min-width: 60px;\n          border-radius: 50%;\n        `}\n      />\n      <div>\n        <p>\n          <a href={`https://twitter.com/${social.twitter}`}>{author.name}</a>\n        </p>\n        <p>{author.summary}</p>\n      </div>\n    </Base>\n  );\n};\n\n// justify-content: center;\nconst Base = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-bottom: 0;\n`;\n\nexport default Bio;\n","import { Link, graphql } from 'gatsby';\nimport React from 'react';\n\nimport Layout from '@components/layout';\nimport Bio from '@components/molecules/bio';\nimport styled from '@emotion/styled';\nimport { faCalendarAlt } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport SEO from '@utils/seo';\nimport { BlogPostsIndexQuery } from 'types/graphql-types';\n\nconst Base = styled.footer``;\n\ntype Props = {\n  data: BlogPostsIndexQuery;\n  location: any;\n};\n\nconst BlogIndex: React.FC<Props> = ({ data, location }) => {\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <React.Fragment>\n      <Layout location={location}>\n        <SEO title='Blog' />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter?.title || node.fields?.slug;\n          return (\n            <article key={node.fields?.slug} itemScope itemType='http://schema.org/Article'>\n              <header>\n                <h3>\n                  <Link style={{ boxShadow: `none` }} to={node.fields?.slug} itemProp='url'>\n                    <span itemProp='headline'>{title}</span>\n                  </Link>\n                </h3>\n                <small>\n                  <FontAwesomeIcon icon={faCalendarAlt} />\n                  {node.frontmatter?.date}\n                </small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter?.description || node.excerpt,\n                  }}\n                  itemProp='description'\n                />\n              </section>\n            </article>\n          );\n        })}\n\n        <Bio />\n      </Layout>\n    </React.Fragment>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query BlogPostsIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 1000, sort: { fields: [frontmatter___date], order: DESC }, filter: { frontmatter: { status: { eq: \"published\" } } }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY/MM/DD\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Base","useStaticQuery","site","siteMetadata","author","social","S","src","alt","placeholder","layout","width","css","href","twitter","name","summary","data","location","posts","allMarkdownRemark","edges","title","map","node","frontmatter","fields","slug","key","itemScope","itemType","Link","style","boxShadow","to","itemProp","icon","faCalendarAlt","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}