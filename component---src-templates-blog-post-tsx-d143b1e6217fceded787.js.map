{"version":3,"sources":["webpack://ryoga.dev/./src/templates/blog-post.tsx"],"names":["data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","className","itemProp","icon","faCalendarAlt","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"mappings":"oMA6DA,UAnDwC,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACtDC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,QAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,IACjC,QAAC,IAAD,CAAKG,MAAOL,EAAKQ,YAAYH,MAAOI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,WACtF,mBAASC,UAAU,iBACjB,eAAKA,UAAU,eACb,cAAIC,SAAS,YAAYZ,EAAKQ,YAAYH,QAC1C,aAAGM,UAAU,cACX,QAAC,IAAD,CAAiBE,KAAMC,OACtBd,EAAKQ,YAAYO,QAGtB,mBAASC,wBAAyB,CAAEC,OAAQjB,EAAKkB,MAAQN,SAAS,kBAIpE,oBACE,cACEO,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,KAEX,kBACGlB,IACC,QAAC,EAAAmB,KAAD,CAAMC,GAAIpB,EAASqB,OAAOC,KAAMC,IAAI,QAApC,KACKvB,EAASE,YAAYH,SAK9B,kBACGE,IACC,QAAC,EAAAkB,KAAD,CAAMC,GAAInB,EAAKoB,OAAOC,KAAMC,IAAI,QAC7BtB,EAAKC,YAAYH,MADpB,UAOR,QAAC,IAAD","file":"component---src-templates-blog-post-tsx-d143b1e6217fceded787.js","sourcesContent":["import { Link, graphql } from 'gatsby';\nimport React from 'react';\n\nimport Layout from '@components/layout';\nimport Bio from '@components/molecules/bio';\nimport { faCalendarAlt } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '@styles/blog-post.scss';\nimport SEO from '@utils/seo';\n\nconst BlogPostTemplate: React.FC<any> = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={post.frontmatter.title} description={post.frontmatter.description || post.excerpt} />\n      <article className='blog-article'>\n        <div className='blog-title'>\n          <h1 itemProp='headline'>{post.frontmatter.title}</h1>\n          <p className='post-date'>\n            <FontAwesomeIcon icon={faCalendarAlt} />\n            {post.frontmatter.date}\n          </p>\n        </div>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} itemProp='articleBody' />\n        {/*<section>{renderAst(post.htmlAst)}</section>*/}\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel='prev'>\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel='next'>\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <Bio />\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY/MM/DD\")\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}