{"version":3,"sources":["webpack://ryoga.dev/./src/pages/blog.tsx"],"names":["data","location","posts","allMarkdownRemark","edges","title","map","node","frontmatter","fields","slug","key","itemScope","itemType","Link","style","boxShadow","to","itemProp","icon","faCalendar","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"iNAWU,yCAsDV,UA9CoC,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACrCC,EAAQF,EAAKG,kBAAkBC,MAErC,OACE,QAAC,WAAD,MACE,QAAC,IAAD,CAAQH,SAAUA,IAChB,QAAC,IAAD,CAAKI,MAAM,SACVH,EAAMI,KAAI,YAAe,IAAD,YAAXC,EAAW,EAAXA,KACNF,GAAQ,UAAAE,EAAKC,mBAAL,eAAkBH,SAAlB,UAA2BE,EAAKE,cAAhC,aAA2B,EAAaC,MACtD,OACE,mBACEC,IAAG,UAAEJ,EAAKE,cAAP,aAAE,EAAaC,KAClBE,WAAS,EACTC,SAAS,8BAET,uBACE,mBACE,QAAC,EAAAC,KAAD,CACEC,MAAO,CAAEC,UAAU,QACnBC,GAAE,UAAEV,EAAKE,cAAP,aAAE,EAAaC,KACjBQ,SAAS,QAET,gBAAMA,SAAS,YAAYb,MAG/B,sBAAO,QAAC,IAAD,CAAiBc,KAAMC,QAA9B,UAA4Cb,EAAKC,mBAAjD,aAA4C,EAAkBa,QAEhE,wBACE,aACEC,wBAAyB,CACvBC,QAAQ,UAAAhB,EAAKC,mBAAL,eAAkBgB,cAAejB,EAAKkB,SAEhDP,SAAS,sBAOnB,QAAC,IAAD","file":"component---src-pages-blog-tsx-48a9c164342946afba99.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"src/components/molecules/bio\"\nimport Layout from \"src/components/layout\"\nimport SEO from \"src/utils/seo\"\nimport styled from \"@emotion/styled\";\nimport { BlogPostsIndexQuery } from \"types/graphql-types\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalendar} from '@fortawesome/free-solid-svg-icons'\n\nconst Base = styled.footer`\n`\n\ntype Props = {\n  data: BlogPostsIndexQuery;\n  location: any;\n};\n\nconst BlogIndex: React.FC<Props>  = ({ data, location }) => {\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <React.Fragment>\n      <Layout location={location}>\n        <SEO title=\"Blog\" />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter?.title || node.fields?.slug;\n          return (\n            <article\n              key={node.fields?.slug}\n              itemScope\n              itemType=\"http://schema.org/Article\"\n            >\n              <header>\n                <h3>\n                  <Link\n                    style={{ boxShadow: `none` }}\n                    to={node.fields?.slug}\n                    itemProp=\"url\"\n                  >\n                    <span itemProp=\"headline\">{title}</span>\n                  </Link>\n                </h3>\n                <small><FontAwesomeIcon icon={faCalendar}/>{node.frontmatter?.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter?.description || node.excerpt,\n                  }}\n                  itemProp=\"description\"\n                />\n              </section>\n            </article>\n          )\n        })}\n\n        <Bio />\n      </Layout>\n    </React.Fragment>\n\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogPostsIndex{\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n        limit: 1000\n        sort: { fields: [frontmatter___date], order: DESC }\n        filter: { frontmatter: { status: { eq: \"published\" } } }\n      ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY/MM/DD\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}