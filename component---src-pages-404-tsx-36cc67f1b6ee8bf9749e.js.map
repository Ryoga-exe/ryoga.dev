{"version":3,"file":"component---src-pages-404-tsx-36cc67f1b6ee8bf9749e.js","mappings":"4OAUA,IAAMA,GAAO,YAAH,mBAAG,CAAH,kIAQCC,EAAAA,EAAAA,WARD,qBAUYA,EAAAA,EAAAA,SAVZ,gCAaGA,EAAAA,EAAAA,WAbH,iHAoBGA,EAAAA,EAAAA,WApBH,2IA4BcA,EAAAA,EAAAA,eA5Bd,kIA0CJC,EAAWF,EAAKG,cAAcC,EAAAA,KAAnB,qB,mFAQXC,EAA4C,SAAC,GAA6B,IAA3BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,OAC3DC,EAAaF,EAAGG,WAAW,YAAcH,EAAGG,WAAW,YAC7D,OACE,QAAC,WAAD,KACGD,GACC,QAACT,EAAD,CAAMW,KAAMJ,EAAIC,OAAO,SAASI,IAAI,wBAClC,qBACE,QAAC,IAAD,CACEC,KAAMC,EAAAA,IACNC,IAAG,IAMJT,IAEH,QAAC,IAAD,CAAiBO,KAAMG,EAAAA,QAGzB,QAACd,EAAD,CAAUK,GAAIA,EAAIC,OAAQA,IACxB,oBAAOF,IACP,QAAC,IAAD,CAAiBO,KAAMG,EAAAA,SAO3BC,GAAgB,cAAH,mBAAG,CAAH,mD,+GCvEnB,IAAMC,GAAU,aAAH,mBAAG,CAAH,qGAuBb,UAdqD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnD,QAAC,IAAD,CAAQA,SAAUA,IAChB,QAAC,IAAD,CAAKC,MAAM,oBACX,QAACF,EAAD,MACE,QAAC,IAAD,CAAiBL,KAAMQ,EAAAA,MADzB,cAIA,yCACA,2EACA,6EACA,QAAC,IAAD,CAAcd,GAAG,KAAjB","sources":["webpack://ryoga.dev/./src/components/molecules/button.tsx","webpack://ryoga.dev/./src/pages/404.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Color from '@utils/color';\n\nconst Base = styled.a`\n  text-decoration: none;\n  display: inline-block;\n  padding: 8px 50px;\n  line-height: 1;\n  margin-top: 30px;\n  font-size: 1em;\n  border-radius: 2px;\n  color: ${Color.buttonText};\n\n  background-color: ${Color.buttonBg};\n  transition: 0.3s;\n  > span {\n    color: ${Color.buttonText};\n    display: inline-block;\n    -webkit-transform: translateX(8px);\n    transform: translateX(8px);\n    transition: 0.3s;\n  }\n  > svg {\n    color: ${Color.buttonText};\n    display: inline-block;\n    -webkit-transform: translateX(-8px);\n    transform: translateX(-8px);\n    opacity: 0;\n    transition: 0.3s;\n  }\n  &:hover {\n    background-color: ${Color.buttonBgHoverd};\n    transition: 0.3s;\n    > span {\n      transform: translateX(-5px);\n      transition: 0.3s;\n    }\n    > svg {\n      transform: translateX(5px);\n      opacity: 1;\n      transition: 0.3s;\n    }\n  }\n`;\n\nconst BaseLink = Base.withComponent(Link);\n\ntype ButtonDetailProps = {\n  children?: React.ReactNode;\n  to: string;\n  target?: string;\n};\n\nconst ButtonDetail: React.FC<ButtonDetailProps> = ({ children, to, target }) => {\n  const isExternal = to.startsWith('http://') || to.startsWith('https://');\n  return (\n    <React.Fragment>\n      {isExternal ? (\n        <Base href={to} target='_blank' rel='noopener noreferrer'>\n          <span>\n            <FontAwesomeIcon\n              icon={faExternalLinkAlt}\n              css={css`\n                font-size: 0.8em;\n                margin-right: 0.4em;\n                margin-bottom: 0.1em;\n              `}\n            />\n            {children}\n          </span>\n          <FontAwesomeIcon icon={faArrowRight} />\n        </Base>\n      ) : (\n        <BaseLink to={to} target={target}>\n          <span>{children}</span>\n          <FontAwesomeIcon icon={faArrowRight} />\n        </BaseLink>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst ButtonWrapper = styled.div`\n  > a {\n    margin-right: 2rem;\n  }\n`;\n\nexport { ButtonDetail, ButtonWrapper };\n","import { PageProps, graphql } from 'gatsby';\nimport React from 'react';\n\nimport Layout from '@components/layout';\nimport { ButtonDetail } from '@components/molecules/button';\nimport styled from '@emotion/styled';\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport SEO from '@utils/seo';\n\ntype DataProps = {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n};\n\nconst Hedding = styled.h1`\n  font-size: 2.1rem;\n  color: #222;\n  margin-bottom: 0.4rem;\n  > svg {\n    margin-right: 10px;\n  }\n`;\n\nconst NotFoundPage: React.FC<PageProps<DataProps>> = ({ location }) => (\n  <Layout location={location}>\n    <SEO title='404: Not Found' />\n    <Hedding>\n      <FontAwesomeIcon icon={faExclamationCircle} />\n      Not Found\n    </Hedding>\n    <p>お探しのページは見つかりませんでした。</p>\n    <p>申し訳ありません。一時的にアクセスが出来ない状況にあるか、もしくは移動、削除され見つけることができません。</p>\n    <p>You just hit a route that doesn't exist... the sadness.</p>\n    <ButtonDetail to='/'>Topへ戻る</ButtonDetail>\n  </Layout>\n);\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"names":["Base","Color","BaseLink","withComponent","Link","ButtonDetail","children","to","target","isExternal","startsWith","href","rel","icon","faExternalLinkAlt","css","faArrowRight","ButtonWrapper","Hedding","location","title","faExclamationCircle"],"sourceRoot":""}