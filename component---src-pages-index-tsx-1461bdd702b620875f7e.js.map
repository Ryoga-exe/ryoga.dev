{"version":3,"sources":["webpack://ryoga.dev/./src/components/atoms/heading.tsx","webpack://ryoga.dev/./src/components/molecules/button.tsx","webpack://ryoga.dev/./src/components/atoms/icon.tsx","webpack://ryoga.dev/./src/components/molecules/arrow.tsx","webpack://ryoga.dev/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://ryoga.dev/./src/components/organisms/hero.tsx","webpack://ryoga.dev/./src/pages/index.tsx"],"names":["underlineHeight","Base","Heading","H1","withComponent","Color","H2","H3","H4","H5","H6","BaseLink","Link","children","to","target","isExternal","startsWith","href","icon","faExternalLinkAlt","css","faArrowRight","props","cursor","hoverColor","hover","strings","raw","Animation","keyframes","slice","fill","isHero","className","location","title","AboutMe","Skills","Works","Blog","Achievements","style","height","Socials","id","padding","faTwitter","faGithub","faHtml5","faJs","faCss3"],"mappings":"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","file":"component---src-pages-index-tsx-1461bdd702b620875f7e.js","sourcesContent":["import styled from '@emotion/styled';\nimport Color from '@utils/color';\n\nconst underlineHeight = '2px';\nconst accentWidth = '120px';\n\nconst Base = styled.span``;\n\nconst H1 = styled(Base.withComponent('h1'))`\n  font-size: 1.7rem;\n  font-weight: 500;\n  padding-left: 1rem;\n  border-left: 5px solid ${Color.accent};\n`;\n\nconst H2 = styled(Base.withComponent('h2'))`\n  text-transform: none;\n  position: relative;\n  font-size: 1.5rem;\n  padding-bottom: 0.25em;\n  margin-top: 2rem;\n  margin-bottom: 1.5rem;\n  border-bottom: ${underlineHeight} solid ${Color.underline};\n  &::before {\n    position: absolute;\n    content: '';\n    width: ${accentWidth};\n    bottom: -${underlineHeight};\n    height: ${underlineHeight};\n    background-color: ${Color.accent};\n  }\n`;\n\nconst H3 = styled(Base.withComponent('h3'))`\n  display: inline-block;\n  font-size: 1.6rem;\n  font-weight: 500;\n  text-transform: none;\n  &::after {\n    margin-top: 5px;\n    margin-bottom: 25px;\n    content: '';\n    display: block;\n    height: 3px;\n    background-color: ${Color.accent};\n  }\n`;\n\nconst H4 = styled(Base.withComponent('h4'))``;\n\nconst H5 = styled(Base.withComponent('h5'))``;\n\nconst H6 = styled(Base.withComponent('h6'))``;\n\nconst Heading = { H1, H2, H3, H4, H5, H6 };\n\nexport default Heading;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Color from '@utils/color';\n\nconst Base = styled.a`\n  text-decoration: none;\n  display: inline-block;\n  padding: 8px 50px;\n  line-height: 1;\n  margin-top: 30px;\n  font-size: 1em;\n  border-radius: 2px;\n  color: ${Color.buttonText};\n\n  background-color: ${Color.buttonBg};\n  transition: 0.3s;\n  > span {\n    color: ${Color.buttonText};\n    display: inline-block;\n    -webkit-transform: translateX(8px);\n    transform: translateX(8px);\n    transition: 0.3s;\n  }\n  > svg {\n    color: ${Color.buttonText};\n    display: inline-block;\n    -webkit-transform: translateX(-8px);\n    transform: translateX(-8px);\n    opacity: 0;\n    transition: 0.3s;\n  }\n  &:hover {\n    background-color: ${Color.buttonBgHoverd};\n    transition: 0.3s;\n    > span {\n      transform: translateX(-5px);\n      transition: 0.3s;\n    }\n    > svg {\n      transform: translateX(5px);\n      opacity: 1;\n      transition: 0.3s;\n    }\n  }\n`;\n\nconst BaseLink = Base.withComponent(Link);\n\ntype ButtonDetailProps = {\n  children?: React.ReactNode;\n  to: string;\n  target?: string;\n};\n\nconst ButtonDetail: React.FC<ButtonDetailProps> = ({ children, to, target }) => {\n  const isExternal = to.startsWith('http://') || to.startsWith('https://');\n  return (\n    <React.Fragment>\n      {isExternal ? (\n        <Base href={to} target='_blank'>\n          <span>\n            <FontAwesomeIcon\n              icon={faExternalLinkAlt}\n              css={css`\n                font-size: 0.8em;\n                margin-right: 0.4em;\n              `}\n            />\n            {children}\n          </span>\n          <FontAwesomeIcon icon={faArrowRight} />\n        </Base>\n      ) : (\n        <BaseLink to={to} target={target}>\n          <span>{children}</span>\n          <FontAwesomeIcon icon={faArrowRight} />\n        </BaseLink>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ButtonDetail;\n","import React from 'react';\n\nimport styled from '@emotion/styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Base = styled.span<{ hoverColor?: string; cursor?: string }>`\n  cursor: ${(props) => props.cursor || 'initial'};\n  transition: 0.2s;\n  &:hover {\n    color: ${(props) => props.hoverColor || 'initial'};\n    transition: 0.2s;\n  }\n`;\n\ntype IconProps = {\n  icon?: any;\n  hover?: string;\n  cursor?: string;\n};\n\nconst Icon: React.FC<IconProps> = ({ icon, hover, cursor }) => (\n  <Base hoverColor={hover} cursor={cursor}>\n    <FontAwesomeIcon icon={icon} />\n  </Base>\n);\n\nexport default Icon;\n","import { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst ArrowSize = 18;\n\nconst Animation = keyframes`\n  0% {\n    transform: rotate(-45deg) translate(0, 0);\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    transform: rotate(-45deg) translate(-25px, 25px);\n    opacity: 0;\n  }\n`;\n\nconst Arrow = styled.a`\n  width: 30px;\n  height: 60px;\n  display: block;\n  position: absolute;\n  bottom: 0;\n  text-align: center;\n  cursor: pointer;\n  color: white;\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0px;\n    left: 50%;\n    width: ${ArrowSize}px;\n    height: ${ArrowSize}px;\n    margin-left: ${-ArrowSize / 2}px;\n    border-bottom: 2px solid white;\n    border-left: 2px solid white;\n    transform: rotate(-45deg) translate(0, 0);\n    animation: ${Animation} 1.5s infinite;\n  }\n`;\n\nexport default Arrow;\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import React from 'react';\n\nimport Logo from '@components/atoms/logo';\nimport Arrow from '@components/molecules/arrow';\nimport styled from '@emotion/styled';\nimport Color from '@utils/color';\n\nconst Base = styled.div`\n  position: relative;\n  width: 100%;\n  height: min(max(30vw, 70vh), 100vh);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 0px;\n  background-color: ${Color.bgAccent};\n`;\n\nconst Hero: React.FC = () => {\n  return (\n    <Base>\n      <Logo fill='white' isHero={true} />\n      <Arrow href='#aboutMe' className='scroll'></Arrow>\n    </Base>\n  );\n};\n\nexport default Hero;\n","import { Link, graphql, PageProps } from 'gatsby';\nimport React from 'react';\n\nimport Container from '@components/atoms/container';\nimport Heading from '@components/atoms/heading';\nimport Icon from '@components/atoms/icon';\nimport Layout from '@components/layout';\nimport Bio from '@components/molecules/bio';\nimport ButtonDetail from '@components/molecules/button';\nimport Hero from '@components/organisms/hero';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faHtml5 } from '@fortawesome/free-brands-svg-icons';\nimport { faJs } from '@fortawesome/free-brands-svg-icons';\nimport { faCss3 } from '@fortawesome/free-brands-svg-icons';\nimport SEO from '@utils/seo';\n\nconst TopPage: React.FC<PageProps> = ({ location }) => {\n  return (\n    <React.Fragment>\n      <Layout location={location}>\n        <SEO title='Top' />\n        <Hero />\n        <AboutMe />\n        <Skills />\n        <Works />\n        <Blog />\n        <Achievements />\n        <Container>\n          <Link to='/blog'>\n            <h1>Blog</h1>\n          </Link>\n          <div style={{ height: `100vh` }}></div>\n          <Bio />\n        </Container>\n      </Layout>\n    </React.Fragment>\n  );\n};\n\nexport default TopPage;\n\nconst Socials = styled.div`\n  font-size: 1.7rem;\n  margin-bottom: 10px;\n  > span {\n    margin-right: 1rem;\n  }\n`;\n\nconst AboutMe: React.FC = () => (\n  <section id='aboutMe'>\n    <Container padding='100px 4vw'>\n      <Heading.H3>About Me</Heading.H3>\n      <Socials>\n        <Icon icon={faTwitter} hover='gray' cursor='pointer' />\n        <Icon icon={faGithub} hover='gray' cursor='pointer' />\n      </Socials>\n      <p>茨城県の某中等学校に通ってるただの人間です。</p>\n      <p>ゲーム開発、Webサイト製作、電子工作などいろいろやっています。たまに編み物もやります。</p>\n      <p>最近は、ReactやGatsby.js、競プロにハマって勉強していますが、やりたいことが多すぎて方向性が散乱しがちです。</p>\n      <p>詳しくはAboutページへ</p>\n      <br />\n      <ButtonDetail to='/about'>About</ButtonDetail>\n    </Container>\n  </section>\n);\n\nconst Skills: React.FC = () => (\n  <section\n    id='skills'\n    css={css`\n      background-color: #f7fafc;\n    `}>\n    <Container padding='100px 4vw'>\n      <Heading.H3>Skills</Heading.H3>\n      <div\n        css={css`\n          font-size: 3rem;\n        `}>\n        <Icon icon={faHtml5} />\n        <Icon icon={faJs} />\n        <Icon icon={faCss3} />\n      </div>\n      <br />\n      <ButtonDetail to='/about#skills'>Skills</ButtonDetail>\n    </Container>\n  </section>\n);\n\nconst Works: React.FC = () => (\n  <section id='works'>\n    <Container padding='100px 4vw'>\n      <Heading.H3>Works</Heading.H3>\n    </Container>\n  </section>\n);\n\nconst Blog: React.FC = () => (\n  <section id='blog'>\n    <Container padding='100px 4vw'>\n      <Heading.H3>Blog</Heading.H3>\n    </Container>\n  </section>\n);\n\nconst Achievements: React.FC = () => (\n  <section id='achievements'>\n    <Container padding='100px 4vw'>\n      <Heading.H3>Achievements</Heading.H3>\n    </Container>\n  </section>\n);\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}